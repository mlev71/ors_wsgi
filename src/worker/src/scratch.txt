
########################################
# Doi.html loop for all cloud locations#
########################################

         <!-- loop for all availble cloud locations --> 

         {% if data.get('contentUrl') is not none %}

            {% for key,value in data['contentUrl'].items() %}
            <tr>
               <th> {{key}} Content Url  </th>
               <th itemprop='contentUrl'> <a href="{{value}}">{{value}}</a> </th>
            </tr> 
            {% endfor %}

         {% endif %}




####################################
#       Globus auth refresh tokens #
####################################
        # if token isn't active, check for refresh token
        if refresh_token is not None:
            # attempt to refresh the token 
            refresh_authorizer = globus_sdk.RefreshTokenAuthorizer(refresh_token, auth_client)

            new_token = ac.oauth2_refresh_token(refresh_token)
            access_token = new_token.get('auth.globus.org').get('access_token') 

            # change the request args
            request.args['access_token'] = access_token


            ac = globus_sdk.AuthClient(
                    authorizer = globus_sdk.AccessTokenAuthorizer(access_token)
                    )

            valid_email = validate_email(ac.oauth2_userinfo().data.get('email')) 
            if valid_email:
                return f(*args, **kwargs) 
            else:
                return redirect(url_for('register'))

        else: 
            return redirect(url_for('login'))

