language: python
python:
   - "3.6"

services:
   - docker

before_install:
   - sudo apt-get update
   - sudo apt-get install python3 python3-pip build-essential


install:
   - pip3 install -r requirements.txt
   - pip3 install mock nose parameterized


script:
   - python3 app/test/

after_success:
   - set -e
   - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD";
   - REPO=jackofsum/ors-wsgi
   - docker build -f Dockerfile -t $REPO:latest .;
   - docker push $REPO:latest;
   - echo "Pushed to" $REPO:latest;
   - wget https://github.com/jwilder/dockerize/releases/download/v0.6.0/dockerize-linux-amd64-v0.6.0.tar.gz;
   - tar -xzvf dockerize-linux-amd64-v0.6.0.tar.gz;
   - rm dockerize-linux-amd64-v0.6.0.tar.gz;
   - export GIT_SHA=$(git rev-parse --short HEAD);
   - export GIT_TAG="latest";
   - git clone "https://github.com/mlev71/mastino.git";
   - git remote add upstream https://github.com/datacite/mastino.git;
   - git fetch upstream;
   - git merge origin/master;
   - ./dockerize -template _wsgi.auto.tfvars.tmpl:mastino/stage/services/ors/_wsgi.auto.tfvars;
   - cd mastino;
   - git config user.email ${GIT_EMAIL};
   - git config user.name ${GIT_USERNAME};
   - git add stage/services/ors/_wsgi.auto.tfvars;
   - git commit -m "Updating ORS wsgi variables for latest commit";
   - git push "https://github.com/mlev71/mastino.git" master;


notifications:
   slack: nih-dcppc:l3h7LfWvZB72JRb9cDHERRjC
